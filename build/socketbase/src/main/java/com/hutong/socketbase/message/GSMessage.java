// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GSMessage.proto

package com.hutong.socketbase.message;

public final class GSMessage {
  private GSMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SceneUniqeIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 sceneType = 1;
    /**
     * <code>required int32 sceneType = 1;</code>
     *
     * <pre>
     * scene类型
     * </pre>
     */
    boolean hasSceneType();
    /**
     * <code>required int32 sceneType = 1;</code>
     *
     * <pre>
     * scene类型
     * </pre>
     */
    int getSceneType();

    // required string sceneId = 2;
    /**
     * <code>required string sceneId = 2;</code>
     *
     * <pre>
     * scene标识
     * </pre>
     */
    boolean hasSceneId();
    /**
     * <code>required string sceneId = 2;</code>
     *
     * <pre>
     * scene标识
     * </pre>
     */
    java.lang.String getSceneId();
    /**
     * <code>required string sceneId = 2;</code>
     *
     * <pre>
     * scene标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getSceneIdBytes();
  }
  /**
   * Protobuf type {@code GSMessage.SceneUniqeId}
   */
  public static final class SceneUniqeId extends
      com.google.protobuf.GeneratedMessage
      implements SceneUniqeIdOrBuilder {
    // Use SceneUniqeId.newBuilder() to construct.
    private SceneUniqeId(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SceneUniqeId(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SceneUniqeId defaultInstance;
    public static SceneUniqeId getDefaultInstance() {
      return defaultInstance;
    }

    public SceneUniqeId getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SceneUniqeId(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sceneType_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              sceneId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SceneUniqeId_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SceneUniqeId_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.SceneUniqeId.class, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder.class);
    }

    public static com.google.protobuf.Parser<SceneUniqeId> PARSER =
        new com.google.protobuf.AbstractParser<SceneUniqeId>() {
      public SceneUniqeId parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SceneUniqeId(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SceneUniqeId> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 sceneType = 1;
    public static final int SCENETYPE_FIELD_NUMBER = 1;
    private int sceneType_;
    /**
     * <code>required int32 sceneType = 1;</code>
     *
     * <pre>
     * scene类型
     * </pre>
     */
    public boolean hasSceneType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 sceneType = 1;</code>
     *
     * <pre>
     * scene类型
     * </pre>
     */
    public int getSceneType() {
      return sceneType_;
    }

    // required string sceneId = 2;
    public static final int SCENEID_FIELD_NUMBER = 2;
    private java.lang.Object sceneId_;
    /**
     * <code>required string sceneId = 2;</code>
     *
     * <pre>
     * scene标识
     * </pre>
     */
    public boolean hasSceneId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string sceneId = 2;</code>
     *
     * <pre>
     * scene标识
     * </pre>
     */
    public java.lang.String getSceneId() {
      java.lang.Object ref = sceneId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sceneId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string sceneId = 2;</code>
     *
     * <pre>
     * scene标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSceneIdBytes() {
      java.lang.Object ref = sceneId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sceneId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      sceneType_ = 0;
      sceneId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSceneType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSceneId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sceneType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSceneIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sceneType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSceneIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SceneUniqeId parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.SceneUniqeId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.SceneUniqeId}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SceneUniqeId_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SceneUniqeId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.SceneUniqeId.class, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.SceneUniqeId.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sceneType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sceneId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SceneUniqeId_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.SceneUniqeId getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.SceneUniqeId build() {
        com.hutong.socketbase.message.GSMessage.SceneUniqeId result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.SceneUniqeId buildPartial() {
        com.hutong.socketbase.message.GSMessage.SceneUniqeId result = new com.hutong.socketbase.message.GSMessage.SceneUniqeId(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sceneType_ = sceneType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sceneId_ = sceneId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.SceneUniqeId) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.SceneUniqeId)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.SceneUniqeId other) {
        if (other == com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance()) return this;
        if (other.hasSceneType()) {
          setSceneType(other.getSceneType());
        }
        if (other.hasSceneId()) {
          bitField0_ |= 0x00000002;
          sceneId_ = other.sceneId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSceneType()) {
          
          return false;
        }
        if (!hasSceneId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.SceneUniqeId parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.SceneUniqeId) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 sceneType = 1;
      private int sceneType_ ;
      /**
       * <code>required int32 sceneType = 1;</code>
       *
       * <pre>
       * scene类型
       * </pre>
       */
      public boolean hasSceneType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 sceneType = 1;</code>
       *
       * <pre>
       * scene类型
       * </pre>
       */
      public int getSceneType() {
        return sceneType_;
      }
      /**
       * <code>required int32 sceneType = 1;</code>
       *
       * <pre>
       * scene类型
       * </pre>
       */
      public Builder setSceneType(int value) {
        bitField0_ |= 0x00000001;
        sceneType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sceneType = 1;</code>
       *
       * <pre>
       * scene类型
       * </pre>
       */
      public Builder clearSceneType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sceneType_ = 0;
        onChanged();
        return this;
      }

      // required string sceneId = 2;
      private java.lang.Object sceneId_ = "";
      /**
       * <code>required string sceneId = 2;</code>
       *
       * <pre>
       * scene标识
       * </pre>
       */
      public boolean hasSceneId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string sceneId = 2;</code>
       *
       * <pre>
       * scene标识
       * </pre>
       */
      public java.lang.String getSceneId() {
        java.lang.Object ref = sceneId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sceneId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string sceneId = 2;</code>
       *
       * <pre>
       * scene标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSceneIdBytes() {
        java.lang.Object ref = sceneId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sceneId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string sceneId = 2;</code>
       *
       * <pre>
       * scene标识
       * </pre>
       */
      public Builder setSceneId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sceneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string sceneId = 2;</code>
       *
       * <pre>
       * scene标识
       * </pre>
       */
      public Builder clearSceneId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sceneId_ = getDefaultInstance().getSceneId();
        onChanged();
        return this;
      }
      /**
       * <code>required string sceneId = 2;</code>
       *
       * <pre>
       * scene标识
       * </pre>
       */
      public Builder setSceneIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sceneId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.SceneUniqeId)
    }

    static {
      defaultInstance = new SceneUniqeId(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.SceneUniqeId)
  }

  public interface GSRegistOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string gatewayId = 1;
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     * gateway标识
     * </pre>
     */
    boolean hasGatewayId();
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     * gateway标识
     * </pre>
     */
    java.lang.String getGatewayId();
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     * gateway标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getGatewayIdBytes();
  }
  /**
   * Protobuf type {@code GSMessage.GSRegist}
   */
  public static final class GSRegist extends
      com.google.protobuf.GeneratedMessage
      implements GSRegistOrBuilder {
    // Use GSRegist.newBuilder() to construct.
    private GSRegist(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GSRegist(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GSRegist defaultInstance;
    public static GSRegist getDefaultInstance() {
      return defaultInstance;
    }

    public GSRegist getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GSRegist(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              gatewayId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSRegist_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSRegist_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.GSRegist.class, com.hutong.socketbase.message.GSMessage.GSRegist.Builder.class);
    }

    public static com.google.protobuf.Parser<GSRegist> PARSER =
        new com.google.protobuf.AbstractParser<GSRegist>() {
      public GSRegist parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GSRegist(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GSRegist> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string gatewayId = 1;
    public static final int GATEWAYID_FIELD_NUMBER = 1;
    private java.lang.Object gatewayId_;
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     * gateway标识
     * </pre>
     */
    public boolean hasGatewayId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     * gateway标识
     * </pre>
     */
    public java.lang.String getGatewayId() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gatewayId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     * gateway标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGatewayIdBytes() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gatewayId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      gatewayId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGatewayId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getGatewayIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getGatewayIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSRegist parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.GSRegist prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.GSRegist}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.GSRegistOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSRegist_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSRegist_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.GSRegist.class, com.hutong.socketbase.message.GSMessage.GSRegist.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.GSRegist.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gatewayId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSRegist_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.GSRegist getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.GSRegist.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.GSRegist build() {
        com.hutong.socketbase.message.GSMessage.GSRegist result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.GSRegist buildPartial() {
        com.hutong.socketbase.message.GSMessage.GSRegist result = new com.hutong.socketbase.message.GSMessage.GSRegist(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gatewayId_ = gatewayId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.GSRegist) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.GSRegist)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.GSRegist other) {
        if (other == com.hutong.socketbase.message.GSMessage.GSRegist.getDefaultInstance()) return this;
        if (other.hasGatewayId()) {
          bitField0_ |= 0x00000001;
          gatewayId_ = other.gatewayId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGatewayId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.GSRegist parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.GSRegist) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string gatewayId = 1;
      private java.lang.Object gatewayId_ = "";
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       * gateway标识
       * </pre>
       */
      public boolean hasGatewayId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       * gateway标识
       * </pre>
       */
      public java.lang.String getGatewayId() {
        java.lang.Object ref = gatewayId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gatewayId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       * gateway标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGatewayIdBytes() {
        java.lang.Object ref = gatewayId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gatewayId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       * gateway标识
       * </pre>
       */
      public Builder setGatewayId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gatewayId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       * gateway标识
       * </pre>
       */
      public Builder clearGatewayId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gatewayId_ = getDefaultInstance().getGatewayId();
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       * gateway标识
       * </pre>
       */
      public Builder setGatewayIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gatewayId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.GSRegist)
    }

    static {
      defaultInstance = new GSRegist(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.GSRegist)
  }

  public interface SGRegistOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 result = 1;
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    int getResult();

    // repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    java.util.List<com.hutong.socketbase.message.GSMessage.SceneUniqeId> 
        getSceneUniqeIdList();
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId(int index);
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    int getSceneUniqeIdCount();
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    java.util.List<? extends com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> 
        getSceneUniqeIdOrBuilderList();
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code GSMessage.SGRegist}
   */
  public static final class SGRegist extends
      com.google.protobuf.GeneratedMessage
      implements SGRegistOrBuilder {
    // Use SGRegist.newBuilder() to construct.
    private SGRegist(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SGRegist(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SGRegist defaultInstance;
    public static SGRegist getDefaultInstance() {
      return defaultInstance;
    }

    public SGRegist getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SGRegist(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sceneUniqeId_ = new java.util.ArrayList<com.hutong.socketbase.message.GSMessage.SceneUniqeId>();
                mutable_bitField0_ |= 0x00000002;
              }
              sceneUniqeId_.add(input.readMessage(com.hutong.socketbase.message.GSMessage.SceneUniqeId.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sceneUniqeId_ = java.util.Collections.unmodifiableList(sceneUniqeId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGRegist_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGRegist_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.SGRegist.class, com.hutong.socketbase.message.GSMessage.SGRegist.Builder.class);
    }

    public static com.google.protobuf.Parser<SGRegist> PARSER =
        new com.google.protobuf.AbstractParser<SGRegist>() {
      public SGRegist parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SGRegist(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SGRegist> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;
    public static final int SCENEUNIQEID_FIELD_NUMBER = 2;
    private java.util.List<com.hutong.socketbase.message.GSMessage.SceneUniqeId> sceneUniqeId_;
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public java.util.List<com.hutong.socketbase.message.GSMessage.SceneUniqeId> getSceneUniqeIdList() {
      return sceneUniqeId_;
    }
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public java.util.List<? extends com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> 
        getSceneUniqeIdOrBuilderList() {
      return sceneUniqeId_;
    }
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public int getSceneUniqeIdCount() {
      return sceneUniqeId_.size();
    }
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId(int index) {
      return sceneUniqeId_.get(index);
    }
    /**
     * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder(
        int index) {
      return sceneUniqeId_.get(index);
    }

    private void initFields() {
      result_ = 0;
      sceneUniqeId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSceneUniqeIdCount(); i++) {
        if (!getSceneUniqeId(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, result_);
      }
      for (int i = 0; i < sceneUniqeId_.size(); i++) {
        output.writeMessage(2, sceneUniqeId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, result_);
      }
      for (int i = 0; i < sceneUniqeId_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sceneUniqeId_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGRegist parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.SGRegist prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.SGRegist}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.SGRegistOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGRegist_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGRegist_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.SGRegist.class, com.hutong.socketbase.message.GSMessage.SGRegist.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.SGRegist.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSceneUniqeIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGRegist_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.SGRegist getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.SGRegist.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.SGRegist build() {
        com.hutong.socketbase.message.GSMessage.SGRegist result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.SGRegist buildPartial() {
        com.hutong.socketbase.message.GSMessage.SGRegist result = new com.hutong.socketbase.message.GSMessage.SGRegist(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (sceneUniqeIdBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sceneUniqeId_ = java.util.Collections.unmodifiableList(sceneUniqeId_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sceneUniqeId_ = sceneUniqeId_;
        } else {
          result.sceneUniqeId_ = sceneUniqeIdBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.SGRegist) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.SGRegist)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.SGRegist other) {
        if (other == com.hutong.socketbase.message.GSMessage.SGRegist.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (sceneUniqeIdBuilder_ == null) {
          if (!other.sceneUniqeId_.isEmpty()) {
            if (sceneUniqeId_.isEmpty()) {
              sceneUniqeId_ = other.sceneUniqeId_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSceneUniqeIdIsMutable();
              sceneUniqeId_.addAll(other.sceneUniqeId_);
            }
            onChanged();
          }
        } else {
          if (!other.sceneUniqeId_.isEmpty()) {
            if (sceneUniqeIdBuilder_.isEmpty()) {
              sceneUniqeIdBuilder_.dispose();
              sceneUniqeIdBuilder_ = null;
              sceneUniqeId_ = other.sceneUniqeId_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sceneUniqeIdBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSceneUniqeIdFieldBuilder() : null;
            } else {
              sceneUniqeIdBuilder_.addAllMessages(other.sceneUniqeId_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        for (int i = 0; i < getSceneUniqeIdCount(); i++) {
          if (!getSceneUniqeId(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.SGRegist parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.SGRegist) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 result = 1;
      private int result_ ;
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      // repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;
      private java.util.List<com.hutong.socketbase.message.GSMessage.SceneUniqeId> sceneUniqeId_ =
        java.util.Collections.emptyList();
      private void ensureSceneUniqeIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sceneUniqeId_ = new java.util.ArrayList<com.hutong.socketbase.message.GSMessage.SceneUniqeId>(sceneUniqeId_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> sceneUniqeIdBuilder_;

      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public java.util.List<com.hutong.socketbase.message.GSMessage.SceneUniqeId> getSceneUniqeIdList() {
        if (sceneUniqeIdBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sceneUniqeId_);
        } else {
          return sceneUniqeIdBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public int getSceneUniqeIdCount() {
        if (sceneUniqeIdBuilder_ == null) {
          return sceneUniqeId_.size();
        } else {
          return sceneUniqeIdBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId(int index) {
        if (sceneUniqeIdBuilder_ == null) {
          return sceneUniqeId_.get(index);
        } else {
          return sceneUniqeIdBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(
          int index, com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSceneUniqeIdIsMutable();
          sceneUniqeId_.set(index, value);
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(
          int index, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder builderForValue) {
        if (sceneUniqeIdBuilder_ == null) {
          ensureSceneUniqeIdIsMutable();
          sceneUniqeId_.set(index, builderForValue.build());
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder addSceneUniqeId(com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSceneUniqeIdIsMutable();
          sceneUniqeId_.add(value);
          onChanged();
        } else {
          sceneUniqeIdBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder addSceneUniqeId(
          int index, com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSceneUniqeIdIsMutable();
          sceneUniqeId_.add(index, value);
          onChanged();
        } else {
          sceneUniqeIdBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder addSceneUniqeId(
          com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder builderForValue) {
        if (sceneUniqeIdBuilder_ == null) {
          ensureSceneUniqeIdIsMutable();
          sceneUniqeId_.add(builderForValue.build());
          onChanged();
        } else {
          sceneUniqeIdBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder addSceneUniqeId(
          int index, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder builderForValue) {
        if (sceneUniqeIdBuilder_ == null) {
          ensureSceneUniqeIdIsMutable();
          sceneUniqeId_.add(index, builderForValue.build());
          onChanged();
        } else {
          sceneUniqeIdBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder addAllSceneUniqeId(
          java.lang.Iterable<? extends com.hutong.socketbase.message.GSMessage.SceneUniqeId> values) {
        if (sceneUniqeIdBuilder_ == null) {
          ensureSceneUniqeIdIsMutable();
          super.addAll(values, sceneUniqeId_);
          onChanged();
        } else {
          sceneUniqeIdBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder clearSceneUniqeId() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder removeSceneUniqeId(int index) {
        if (sceneUniqeIdBuilder_ == null) {
          ensureSceneUniqeIdIsMutable();
          sceneUniqeId_.remove(index);
          onChanged();
        } else {
          sceneUniqeIdBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder getSceneUniqeIdBuilder(
          int index) {
        return getSceneUniqeIdFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder(
          int index) {
        if (sceneUniqeIdBuilder_ == null) {
          return sceneUniqeId_.get(index);  } else {
          return sceneUniqeIdBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public java.util.List<? extends com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> 
           getSceneUniqeIdOrBuilderList() {
        if (sceneUniqeIdBuilder_ != null) {
          return sceneUniqeIdBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sceneUniqeId_);
        }
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder addSceneUniqeIdBuilder() {
        return getSceneUniqeIdFieldBuilder().addBuilder(
            com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance());
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder addSceneUniqeIdBuilder(
          int index) {
        return getSceneUniqeIdFieldBuilder().addBuilder(
            index, com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance());
      }
      /**
       * <code>repeated .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public java.util.List<com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder> 
           getSceneUniqeIdBuilderList() {
        return getSceneUniqeIdFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> 
          getSceneUniqeIdFieldBuilder() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeIdBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder>(
                  sceneUniqeId_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sceneUniqeId_ = null;
        }
        return sceneUniqeIdBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.SGRegist)
    }

    static {
      defaultInstance = new SGRegist(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.SGRegist)
  }

  public interface GSPlayerDisconnectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 playerId = 1;
    /**
     * <code>required int64 playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required int64 playerId = 1;</code>
     */
    long getPlayerId();

    // required int32 serverId = 2;
    /**
     * <code>required int32 serverId = 2;</code>
     */
    boolean hasServerId();
    /**
     * <code>required int32 serverId = 2;</code>
     */
    int getServerId();

    // required string gatewayId = 3;
    /**
     * <code>required string gatewayId = 3;</code>
     */
    boolean hasGatewayId();
    /**
     * <code>required string gatewayId = 3;</code>
     */
    java.lang.String getGatewayId();
    /**
     * <code>required string gatewayId = 3;</code>
     */
    com.google.protobuf.ByteString
        getGatewayIdBytes();
  }
  /**
   * Protobuf type {@code GSMessage.GSPlayerDisconnect}
   */
  public static final class GSPlayerDisconnect extends
      com.google.protobuf.GeneratedMessage
      implements GSPlayerDisconnectOrBuilder {
    // Use GSPlayerDisconnect.newBuilder() to construct.
    private GSPlayerDisconnect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GSPlayerDisconnect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GSPlayerDisconnect defaultInstance;
    public static GSPlayerDisconnect getDefaultInstance() {
      return defaultInstance;
    }

    public GSPlayerDisconnect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GSPlayerDisconnect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serverId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              gatewayId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPlayerDisconnect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPlayerDisconnect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect.class, com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect.Builder.class);
    }

    public static com.google.protobuf.Parser<GSPlayerDisconnect> PARSER =
        new com.google.protobuf.AbstractParser<GSPlayerDisconnect>() {
      public GSPlayerDisconnect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GSPlayerDisconnect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GSPlayerDisconnect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>required int64 playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 playerId = 1;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }

    // required int32 serverId = 2;
    public static final int SERVERID_FIELD_NUMBER = 2;
    private int serverId_;
    /**
     * <code>required int32 serverId = 2;</code>
     */
    public boolean hasServerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 serverId = 2;</code>
     */
    public int getServerId() {
      return serverId_;
    }

    // required string gatewayId = 3;
    public static final int GATEWAYID_FIELD_NUMBER = 3;
    private java.lang.Object gatewayId_;
    /**
     * <code>required string gatewayId = 3;</code>
     */
    public boolean hasGatewayId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string gatewayId = 3;</code>
     */
    public java.lang.String getGatewayId() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gatewayId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string gatewayId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGatewayIdBytes() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gatewayId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      playerId_ = 0L;
      serverId_ = 0;
      gatewayId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGatewayId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, serverId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getGatewayIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serverId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGatewayIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.GSPlayerDisconnect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.GSPlayerDisconnectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPlayerDisconnect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPlayerDisconnect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect.class, com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gatewayId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPlayerDisconnect_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect build() {
        com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect buildPartial() {
        com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect result = new com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverId_ = serverId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gatewayId_ = gatewayId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect other) {
        if (other == com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasServerId()) {
          setServerId(other.getServerId());
        }
        if (other.hasGatewayId()) {
          bitField0_ |= 0x00000004;
          gatewayId_ = other.gatewayId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasServerId()) {
          
          return false;
        }
        if (!hasGatewayId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.GSPlayerDisconnect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 playerId = 1;
      private long playerId_ ;
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // required int32 serverId = 2;
      private int serverId_ ;
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public int getServerId() {
        return serverId_;
      }
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public Builder setServerId(int value) {
        bitField0_ |= 0x00000002;
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public Builder clearServerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverId_ = 0;
        onChanged();
        return this;
      }

      // required string gatewayId = 3;
      private java.lang.Object gatewayId_ = "";
      /**
       * <code>required string gatewayId = 3;</code>
       */
      public boolean hasGatewayId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string gatewayId = 3;</code>
       */
      public java.lang.String getGatewayId() {
        java.lang.Object ref = gatewayId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gatewayId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string gatewayId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGatewayIdBytes() {
        java.lang.Object ref = gatewayId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gatewayId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string gatewayId = 3;</code>
       */
      public Builder setGatewayId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        gatewayId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 3;</code>
       */
      public Builder clearGatewayId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gatewayId_ = getDefaultInstance().getGatewayId();
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 3;</code>
       */
      public Builder setGatewayIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        gatewayId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.GSPlayerDisconnect)
    }

    static {
      defaultInstance = new GSPlayerDisconnect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.GSPlayerDisconnect)
  }

  public interface SGPlayerDisconnectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 result = 1;
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    boolean hasResult();
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    int getResult();

    // required int64 playerId = 2;
    /**
     * <code>required int64 playerId = 2;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required int64 playerId = 2;</code>
     */
    long getPlayerId();

    // required int32 serverId = 3;
    /**
     * <code>required int32 serverId = 3;</code>
     */
    boolean hasServerId();
    /**
     * <code>required int32 serverId = 3;</code>
     */
    int getServerId();

    // required .GSMessage.SceneUniqeId sceneUniqeId = 4;
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    boolean hasSceneUniqeId();
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId();
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder();
  }
  /**
   * Protobuf type {@code GSMessage.SGPlayerDisconnect}
   */
  public static final class SGPlayerDisconnect extends
      com.google.protobuf.GeneratedMessage
      implements SGPlayerDisconnectOrBuilder {
    // Use SGPlayerDisconnect.newBuilder() to construct.
    private SGPlayerDisconnect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SGPlayerDisconnect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SGPlayerDisconnect defaultInstance;
    public static SGPlayerDisconnect getDefaultInstance() {
      return defaultInstance;
    }

    public SGPlayerDisconnect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SGPlayerDisconnect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              result_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              serverId_ = input.readInt32();
              break;
            }
            case 34: {
              com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = sceneUniqeId_.toBuilder();
              }
              sceneUniqeId_ = input.readMessage(com.hutong.socketbase.message.GSMessage.SceneUniqeId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sceneUniqeId_);
                sceneUniqeId_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPlayerDisconnect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPlayerDisconnect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect.class, com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect.Builder.class);
    }

    public static com.google.protobuf.Parser<SGPlayerDisconnect> PARSER =
        new com.google.protobuf.AbstractParser<SGPlayerDisconnect>() {
      public SGPlayerDisconnect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SGPlayerDisconnect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SGPlayerDisconnect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private int result_;
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 result = 1;</code>
     *
     * <pre>
     * 结果
     * </pre>
     */
    public int getResult() {
      return result_;
    }

    // required int64 playerId = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private long playerId_;
    /**
     * <code>required int64 playerId = 2;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 playerId = 2;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }

    // required int32 serverId = 3;
    public static final int SERVERID_FIELD_NUMBER = 3;
    private int serverId_;
    /**
     * <code>required int32 serverId = 3;</code>
     */
    public boolean hasServerId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 serverId = 3;</code>
     */
    public int getServerId() {
      return serverId_;
    }

    // required .GSMessage.SceneUniqeId sceneUniqeId = 4;
    public static final int SCENEUNIQEID_FIELD_NUMBER = 4;
    private com.hutong.socketbase.message.GSMessage.SceneUniqeId sceneUniqeId_;
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public boolean hasSceneUniqeId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId() {
      return sceneUniqeId_;
    }
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder() {
      return sceneUniqeId_;
    }

    private void initFields() {
      result_ = 0;
      playerId_ = 0L;
      serverId_ = 0;
      sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSceneUniqeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSceneUniqeId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, serverId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, sceneUniqeId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, result_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, serverId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sceneUniqeId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.SGPlayerDisconnect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.SGPlayerDisconnectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPlayerDisconnect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPlayerDisconnect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect.class, com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSceneUniqeIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        serverId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPlayerDisconnect_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect build() {
        com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect buildPartial() {
        com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect result = new com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverId_ = serverId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (sceneUniqeIdBuilder_ == null) {
          result.sceneUniqeId_ = sceneUniqeId_;
        } else {
          result.sceneUniqeId_ = sceneUniqeIdBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect other) {
        if (other == com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasServerId()) {
          setServerId(other.getServerId());
        }
        if (other.hasSceneUniqeId()) {
          mergeSceneUniqeId(other.getSceneUniqeId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResult()) {
          
          return false;
        }
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasServerId()) {
          
          return false;
        }
        if (!hasSceneUniqeId()) {
          
          return false;
        }
        if (!getSceneUniqeId().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.SGPlayerDisconnect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 result = 1;
      private int result_ ;
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public int getResult() {
        return result_;
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public Builder setResult(int value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 result = 1;</code>
       *
       * <pre>
       * 结果
       * </pre>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = 0;
        onChanged();
        return this;
      }

      // required int64 playerId = 2;
      private long playerId_ ;
      /**
       * <code>required int64 playerId = 2;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 playerId = 2;</code>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required int64 playerId = 2;</code>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // required int32 serverId = 3;
      private int serverId_ ;
      /**
       * <code>required int32 serverId = 3;</code>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 serverId = 3;</code>
       */
      public int getServerId() {
        return serverId_;
      }
      /**
       * <code>required int32 serverId = 3;</code>
       */
      public Builder setServerId(int value) {
        bitField0_ |= 0x00000004;
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serverId = 3;</code>
       */
      public Builder clearServerId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serverId_ = 0;
        onChanged();
        return this;
      }

      // required .GSMessage.SceneUniqeId sceneUniqeId = 4;
      private com.hutong.socketbase.message.GSMessage.SceneUniqeId sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> sceneUniqeIdBuilder_;
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public boolean hasSceneUniqeId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId() {
        if (sceneUniqeIdBuilder_ == null) {
          return sceneUniqeId_;
        } else {
          return sceneUniqeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sceneUniqeId_ = value;
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(
          com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder builderForValue) {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = builderForValue.build();
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder mergeSceneUniqeId(com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              sceneUniqeId_ != com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance()) {
            sceneUniqeId_ =
              com.hutong.socketbase.message.GSMessage.SceneUniqeId.newBuilder(sceneUniqeId_).mergeFrom(value).buildPartial();
          } else {
            sceneUniqeId_ = value;
          }
          onChanged();
        } else {
          sceneUniqeIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder clearSceneUniqeId() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
          onChanged();
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder getSceneUniqeIdBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSceneUniqeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder() {
        if (sceneUniqeIdBuilder_ != null) {
          return sceneUniqeIdBuilder_.getMessageOrBuilder();
        } else {
          return sceneUniqeId_;
        }
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 4;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> 
          getSceneUniqeIdFieldBuilder() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder>(
                  sceneUniqeId_,
                  getParentForChildren(),
                  isClean());
          sceneUniqeId_ = null;
        }
        return sceneUniqeIdBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.SGPlayerDisconnect)
    }

    static {
      defaultInstance = new SGPlayerDisconnect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.SGPlayerDisconnect)
  }

  public interface GatewayDisconnectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string gatewayId = 1;
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     *断掉的gatewayId
     * </pre>
     */
    boolean hasGatewayId();
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     *断掉的gatewayId
     * </pre>
     */
    java.lang.String getGatewayId();
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     *断掉的gatewayId
     * </pre>
     */
    com.google.protobuf.ByteString
        getGatewayIdBytes();
  }
  /**
   * Protobuf type {@code GSMessage.GatewayDisconnect}
   */
  public static final class GatewayDisconnect extends
      com.google.protobuf.GeneratedMessage
      implements GatewayDisconnectOrBuilder {
    // Use GatewayDisconnect.newBuilder() to construct.
    private GatewayDisconnect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GatewayDisconnect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GatewayDisconnect defaultInstance;
    public static GatewayDisconnect getDefaultInstance() {
      return defaultInstance;
    }

    public GatewayDisconnect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GatewayDisconnect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              gatewayId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GatewayDisconnect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GatewayDisconnect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.GatewayDisconnect.class, com.hutong.socketbase.message.GSMessage.GatewayDisconnect.Builder.class);
    }

    public static com.google.protobuf.Parser<GatewayDisconnect> PARSER =
        new com.google.protobuf.AbstractParser<GatewayDisconnect>() {
      public GatewayDisconnect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GatewayDisconnect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GatewayDisconnect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string gatewayId = 1;
    public static final int GATEWAYID_FIELD_NUMBER = 1;
    private java.lang.Object gatewayId_;
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     *断掉的gatewayId
     * </pre>
     */
    public boolean hasGatewayId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     *断掉的gatewayId
     * </pre>
     */
    public java.lang.String getGatewayId() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gatewayId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string gatewayId = 1;</code>
     *
     * <pre>
     *断掉的gatewayId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGatewayIdBytes() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gatewayId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      gatewayId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasGatewayId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getGatewayIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getGatewayIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GatewayDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.GatewayDisconnect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.GatewayDisconnect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.GatewayDisconnectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GatewayDisconnect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GatewayDisconnect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.GatewayDisconnect.class, com.hutong.socketbase.message.GSMessage.GatewayDisconnect.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.GatewayDisconnect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gatewayId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GatewayDisconnect_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.GatewayDisconnect getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.GatewayDisconnect.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.GatewayDisconnect build() {
        com.hutong.socketbase.message.GSMessage.GatewayDisconnect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.GatewayDisconnect buildPartial() {
        com.hutong.socketbase.message.GSMessage.GatewayDisconnect result = new com.hutong.socketbase.message.GSMessage.GatewayDisconnect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gatewayId_ = gatewayId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.GatewayDisconnect) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.GatewayDisconnect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.GatewayDisconnect other) {
        if (other == com.hutong.socketbase.message.GSMessage.GatewayDisconnect.getDefaultInstance()) return this;
        if (other.hasGatewayId()) {
          bitField0_ |= 0x00000001;
          gatewayId_ = other.gatewayId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGatewayId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.GatewayDisconnect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.GatewayDisconnect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string gatewayId = 1;
      private java.lang.Object gatewayId_ = "";
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       *断掉的gatewayId
       * </pre>
       */
      public boolean hasGatewayId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       *断掉的gatewayId
       * </pre>
       */
      public java.lang.String getGatewayId() {
        java.lang.Object ref = gatewayId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gatewayId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       *断掉的gatewayId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGatewayIdBytes() {
        java.lang.Object ref = gatewayId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gatewayId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       *断掉的gatewayId
       * </pre>
       */
      public Builder setGatewayId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gatewayId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       *断掉的gatewayId
       * </pre>
       */
      public Builder clearGatewayId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gatewayId_ = getDefaultInstance().getGatewayId();
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 1;</code>
       *
       * <pre>
       *断掉的gatewayId
       * </pre>
       */
      public Builder setGatewayIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        gatewayId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.GatewayDisconnect)
    }

    static {
      defaultInstance = new GatewayDisconnect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.GatewayDisconnect)
  }

  public interface SGDisconnectPlayerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 playerId = 1;
    /**
     * <code>required int64 playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required int64 playerId = 1;</code>
     */
    long getPlayerId();

    // required int32 serverId = 2;
    /**
     * <code>required int32 serverId = 2;</code>
     */
    boolean hasServerId();
    /**
     * <code>required int32 serverId = 2;</code>
     */
    int getServerId();
  }
  /**
   * Protobuf type {@code GSMessage.SGDisconnectPlayer}
   *
   * <pre>
   *scene发送消息主动断开gateway方玩家的连接
   * </pre>
   */
  public static final class SGDisconnectPlayer extends
      com.google.protobuf.GeneratedMessage
      implements SGDisconnectPlayerOrBuilder {
    // Use SGDisconnectPlayer.newBuilder() to construct.
    private SGDisconnectPlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SGDisconnectPlayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SGDisconnectPlayer defaultInstance;
    public static SGDisconnectPlayer getDefaultInstance() {
      return defaultInstance;
    }

    public SGDisconnectPlayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SGDisconnectPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serverId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGDisconnectPlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGDisconnectPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer.class, com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer.Builder.class);
    }

    public static com.google.protobuf.Parser<SGDisconnectPlayer> PARSER =
        new com.google.protobuf.AbstractParser<SGDisconnectPlayer>() {
      public SGDisconnectPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SGDisconnectPlayer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SGDisconnectPlayer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>required int64 playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 playerId = 1;</code>
     */
    public long getPlayerId() {
      return playerId_;
    }

    // required int32 serverId = 2;
    public static final int SERVERID_FIELD_NUMBER = 2;
    private int serverId_;
    /**
     * <code>required int32 serverId = 2;</code>
     */
    public boolean hasServerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 serverId = 2;</code>
     */
    public int getServerId() {
      return serverId_;
    }

    private void initFields() {
      playerId_ = 0L;
      serverId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, serverId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serverId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.SGDisconnectPlayer}
     *
     * <pre>
     *scene发送消息主动断开gateway方玩家的连接
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.SGDisconnectPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGDisconnectPlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGDisconnectPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer.class, com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGDisconnectPlayer_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer build() {
        com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer buildPartial() {
        com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer result = new com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverId_ = serverId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer other) {
        if (other == com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasServerId()) {
          setServerId(other.getServerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasServerId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.SGDisconnectPlayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 playerId = 1;
      private long playerId_ ;
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // required int32 serverId = 2;
      private int serverId_ ;
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public int getServerId() {
        return serverId_;
      }
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public Builder setServerId(int value) {
        bitField0_ |= 0x00000002;
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serverId = 2;</code>
       */
      public Builder clearServerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.SGDisconnectPlayer)
    }

    static {
      defaultInstance = new SGDisconnectPlayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.SGDisconnectPlayer)
  }

  public interface SGSceneToSceneMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 toPlayerId = 1;
    /**
     * <code>required int64 toPlayerId = 1;</code>
     *
     * <pre>
     *接收方的玩家Id
     * </pre>
     */
    boolean hasToPlayerId();
    /**
     * <code>required int64 toPlayerId = 1;</code>
     *
     * <pre>
     *接收方的玩家Id
     * </pre>
     */
    long getToPlayerId();

    // required int32 toServerId = 2;
    /**
     * <code>required int32 toServerId = 2;</code>
     *
     * <pre>
     *接收方玩家的serverId
     * </pre>
     */
    boolean hasToServerId();
    /**
     * <code>required int32 toServerId = 2;</code>
     *
     * <pre>
     *接收方玩家的serverId
     * </pre>
     */
    int getToServerId();

    // required int32 opCode = 3;
    /**
     * <code>required int32 opCode = 3;</code>
     *
     * <pre>
     *游戏方定义的操作码
     * </pre>
     */
    boolean hasOpCode();
    /**
     * <code>required int32 opCode = 3;</code>
     *
     * <pre>
     *游戏方定义的操作码
     * </pre>
     */
    int getOpCode();

    // required bytes msgBytes = 4;
    /**
     * <code>required bytes msgBytes = 4;</code>
     *
     * <pre>
     *游戏方传送的字节数据
     * </pre>
     */
    boolean hasMsgBytes();
    /**
     * <code>required bytes msgBytes = 4;</code>
     *
     * <pre>
     *游戏方传送的字节数据
     * </pre>
     */
    com.google.protobuf.ByteString getMsgBytes();
  }
  /**
   * Protobuf type {@code GSMessage.SGSceneToSceneMsg}
   *
   * <pre>
   *场景之间的互相发送的消息
   * </pre>
   */
  public static final class SGSceneToSceneMsg extends
      com.google.protobuf.GeneratedMessage
      implements SGSceneToSceneMsgOrBuilder {
    // Use SGSceneToSceneMsg.newBuilder() to construct.
    private SGSceneToSceneMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SGSceneToSceneMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SGSceneToSceneMsg defaultInstance;
    public static SGSceneToSceneMsg getDefaultInstance() {
      return defaultInstance;
    }

    public SGSceneToSceneMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SGSceneToSceneMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              toPlayerId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toServerId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              opCode_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              msgBytes_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGSceneToSceneMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGSceneToSceneMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg.class, com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<SGSceneToSceneMsg> PARSER =
        new com.google.protobuf.AbstractParser<SGSceneToSceneMsg>() {
      public SGSceneToSceneMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SGSceneToSceneMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SGSceneToSceneMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 toPlayerId = 1;
    public static final int TOPLAYERID_FIELD_NUMBER = 1;
    private long toPlayerId_;
    /**
     * <code>required int64 toPlayerId = 1;</code>
     *
     * <pre>
     *接收方的玩家Id
     * </pre>
     */
    public boolean hasToPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 toPlayerId = 1;</code>
     *
     * <pre>
     *接收方的玩家Id
     * </pre>
     */
    public long getToPlayerId() {
      return toPlayerId_;
    }

    // required int32 toServerId = 2;
    public static final int TOSERVERID_FIELD_NUMBER = 2;
    private int toServerId_;
    /**
     * <code>required int32 toServerId = 2;</code>
     *
     * <pre>
     *接收方玩家的serverId
     * </pre>
     */
    public boolean hasToServerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 toServerId = 2;</code>
     *
     * <pre>
     *接收方玩家的serverId
     * </pre>
     */
    public int getToServerId() {
      return toServerId_;
    }

    // required int32 opCode = 3;
    public static final int OPCODE_FIELD_NUMBER = 3;
    private int opCode_;
    /**
     * <code>required int32 opCode = 3;</code>
     *
     * <pre>
     *游戏方定义的操作码
     * </pre>
     */
    public boolean hasOpCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 opCode = 3;</code>
     *
     * <pre>
     *游戏方定义的操作码
     * </pre>
     */
    public int getOpCode() {
      return opCode_;
    }

    // required bytes msgBytes = 4;
    public static final int MSGBYTES_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString msgBytes_;
    /**
     * <code>required bytes msgBytes = 4;</code>
     *
     * <pre>
     *游戏方传送的字节数据
     * </pre>
     */
    public boolean hasMsgBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes msgBytes = 4;</code>
     *
     * <pre>
     *游戏方传送的字节数据
     * </pre>
     */
    public com.google.protobuf.ByteString getMsgBytes() {
      return msgBytes_;
    }

    private void initFields() {
      toPlayerId_ = 0L;
      toServerId_ = 0;
      opCode_ = 0;
      msgBytes_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasToPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToServerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOpCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgBytes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, toPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, toServerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, opCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, msgBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, toPlayerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, toServerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, opCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, msgBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.SGSceneToSceneMsg}
     *
     * <pre>
     *场景之间的互相发送的消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGSceneToSceneMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGSceneToSceneMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg.class, com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        toPlayerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        toServerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        opCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        msgBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGSceneToSceneMsg_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg build() {
        com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg buildPartial() {
        com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg result = new com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.toPlayerId_ = toPlayerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toServerId_ = toServerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.opCode_ = opCode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.msgBytes_ = msgBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg other) {
        if (other == com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg.getDefaultInstance()) return this;
        if (other.hasToPlayerId()) {
          setToPlayerId(other.getToPlayerId());
        }
        if (other.hasToServerId()) {
          setToServerId(other.getToServerId());
        }
        if (other.hasOpCode()) {
          setOpCode(other.getOpCode());
        }
        if (other.hasMsgBytes()) {
          setMsgBytes(other.getMsgBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasToPlayerId()) {
          
          return false;
        }
        if (!hasToServerId()) {
          
          return false;
        }
        if (!hasOpCode()) {
          
          return false;
        }
        if (!hasMsgBytes()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.SGSceneToSceneMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 toPlayerId = 1;
      private long toPlayerId_ ;
      /**
       * <code>required int64 toPlayerId = 1;</code>
       *
       * <pre>
       *接收方的玩家Id
       * </pre>
       */
      public boolean hasToPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 toPlayerId = 1;</code>
       *
       * <pre>
       *接收方的玩家Id
       * </pre>
       */
      public long getToPlayerId() {
        return toPlayerId_;
      }
      /**
       * <code>required int64 toPlayerId = 1;</code>
       *
       * <pre>
       *接收方的玩家Id
       * </pre>
       */
      public Builder setToPlayerId(long value) {
        bitField0_ |= 0x00000001;
        toPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 toPlayerId = 1;</code>
       *
       * <pre>
       *接收方的玩家Id
       * </pre>
       */
      public Builder clearToPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        toPlayerId_ = 0L;
        onChanged();
        return this;
      }

      // required int32 toServerId = 2;
      private int toServerId_ ;
      /**
       * <code>required int32 toServerId = 2;</code>
       *
       * <pre>
       *接收方玩家的serverId
       * </pre>
       */
      public boolean hasToServerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 toServerId = 2;</code>
       *
       * <pre>
       *接收方玩家的serverId
       * </pre>
       */
      public int getToServerId() {
        return toServerId_;
      }
      /**
       * <code>required int32 toServerId = 2;</code>
       *
       * <pre>
       *接收方玩家的serverId
       * </pre>
       */
      public Builder setToServerId(int value) {
        bitField0_ |= 0x00000002;
        toServerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 toServerId = 2;</code>
       *
       * <pre>
       *接收方玩家的serverId
       * </pre>
       */
      public Builder clearToServerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toServerId_ = 0;
        onChanged();
        return this;
      }

      // required int32 opCode = 3;
      private int opCode_ ;
      /**
       * <code>required int32 opCode = 3;</code>
       *
       * <pre>
       *游戏方定义的操作码
       * </pre>
       */
      public boolean hasOpCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 opCode = 3;</code>
       *
       * <pre>
       *游戏方定义的操作码
       * </pre>
       */
      public int getOpCode() {
        return opCode_;
      }
      /**
       * <code>required int32 opCode = 3;</code>
       *
       * <pre>
       *游戏方定义的操作码
       * </pre>
       */
      public Builder setOpCode(int value) {
        bitField0_ |= 0x00000004;
        opCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 opCode = 3;</code>
       *
       * <pre>
       *游戏方定义的操作码
       * </pre>
       */
      public Builder clearOpCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        opCode_ = 0;
        onChanged();
        return this;
      }

      // required bytes msgBytes = 4;
      private com.google.protobuf.ByteString msgBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes msgBytes = 4;</code>
       *
       * <pre>
       *游戏方传送的字节数据
       * </pre>
       */
      public boolean hasMsgBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes msgBytes = 4;</code>
       *
       * <pre>
       *游戏方传送的字节数据
       * </pre>
       */
      public com.google.protobuf.ByteString getMsgBytes() {
        return msgBytes_;
      }
      /**
       * <code>required bytes msgBytes = 4;</code>
       *
       * <pre>
       *游戏方传送的字节数据
       * </pre>
       */
      public Builder setMsgBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        msgBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes msgBytes = 4;</code>
       *
       * <pre>
       *游戏方传送的字节数据
       * </pre>
       */
      public Builder clearMsgBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        msgBytes_ = getDefaultInstance().getMsgBytes();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.SGSceneToSceneMsg)
    }

    static {
      defaultInstance = new SGSceneToSceneMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.SGSceneToSceneMsg)
  }

  public interface GSPingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pingNum = 1;
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    boolean hasPingNum();
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    int getPingNum();

    // required string gatewayId = 2;
    /**
     * <code>required string gatewayId = 2;</code>
     */
    boolean hasGatewayId();
    /**
     * <code>required string gatewayId = 2;</code>
     */
    java.lang.String getGatewayId();
    /**
     * <code>required string gatewayId = 2;</code>
     */
    com.google.protobuf.ByteString
        getGatewayIdBytes();
  }
  /**
   * Protobuf type {@code GSMessage.GSPing}
   *
   * <pre>
   *内部的gate 和 scene 之间的心跳消息
   * </pre>
   */
  public static final class GSPing extends
      com.google.protobuf.GeneratedMessage
      implements GSPingOrBuilder {
    // Use GSPing.newBuilder() to construct.
    private GSPing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GSPing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GSPing defaultInstance;
    public static GSPing getDefaultInstance() {
      return defaultInstance;
    }

    public GSPing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GSPing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pingNum_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              gatewayId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.GSPing.class, com.hutong.socketbase.message.GSMessage.GSPing.Builder.class);
    }

    public static com.google.protobuf.Parser<GSPing> PARSER =
        new com.google.protobuf.AbstractParser<GSPing>() {
      public GSPing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GSPing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GSPing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pingNum = 1;
    public static final int PINGNUM_FIELD_NUMBER = 1;
    private int pingNum_;
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    public boolean hasPingNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    public int getPingNum() {
      return pingNum_;
    }

    // required string gatewayId = 2;
    public static final int GATEWAYID_FIELD_NUMBER = 2;
    private java.lang.Object gatewayId_;
    /**
     * <code>required string gatewayId = 2;</code>
     */
    public boolean hasGatewayId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string gatewayId = 2;</code>
     */
    public java.lang.String getGatewayId() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gatewayId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string gatewayId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getGatewayIdBytes() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gatewayId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      pingNum_ = 0;
      gatewayId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPingNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGatewayId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pingNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getGatewayIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pingNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getGatewayIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.GSPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.GSPing}
     *
     * <pre>
     *内部的gate 和 scene 之间的心跳消息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.GSPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.GSPing.class, com.hutong.socketbase.message.GSMessage.GSPing.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.GSPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pingNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gatewayId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPing_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.GSPing getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.GSPing.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.GSPing build() {
        com.hutong.socketbase.message.GSMessage.GSPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.GSPing buildPartial() {
        com.hutong.socketbase.message.GSMessage.GSPing result = new com.hutong.socketbase.message.GSMessage.GSPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pingNum_ = pingNum_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gatewayId_ = gatewayId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.GSPing) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.GSPing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.GSPing other) {
        if (other == com.hutong.socketbase.message.GSMessage.GSPing.getDefaultInstance()) return this;
        if (other.hasPingNum()) {
          setPingNum(other.getPingNum());
        }
        if (other.hasGatewayId()) {
          bitField0_ |= 0x00000002;
          gatewayId_ = other.gatewayId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPingNum()) {
          
          return false;
        }
        if (!hasGatewayId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.GSPing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.GSPing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pingNum = 1;
      private int pingNum_ ;
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public boolean hasPingNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public int getPingNum() {
        return pingNum_;
      }
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public Builder setPingNum(int value) {
        bitField0_ |= 0x00000001;
        pingNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public Builder clearPingNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pingNum_ = 0;
        onChanged();
        return this;
      }

      // required string gatewayId = 2;
      private java.lang.Object gatewayId_ = "";
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public boolean hasGatewayId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public java.lang.String getGatewayId() {
        java.lang.Object ref = gatewayId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gatewayId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getGatewayIdBytes() {
        java.lang.Object ref = gatewayId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gatewayId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public Builder setGatewayId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        gatewayId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public Builder clearGatewayId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gatewayId_ = getDefaultInstance().getGatewayId();
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public Builder setGatewayIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        gatewayId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.GSPing)
    }

    static {
      defaultInstance = new GSPing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.GSPing)
  }

  public interface SGPongOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pongNum = 1;
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    boolean hasPongNum();
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    int getPongNum();

    // required .GSMessage.SceneUniqeId sceneUniqeId = 2;
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    boolean hasSceneUniqeId();
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId();
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder();
  }
  /**
   * Protobuf type {@code GSMessage.SGPong}
   */
  public static final class SGPong extends
      com.google.protobuf.GeneratedMessage
      implements SGPongOrBuilder {
    // Use SGPong.newBuilder() to construct.
    private SGPong(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SGPong(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SGPong defaultInstance;
    public static SGPong getDefaultInstance() {
      return defaultInstance;
    }

    public SGPong getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SGPong(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pongNum_ = input.readInt32();
              break;
            }
            case 18: {
              com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = sceneUniqeId_.toBuilder();
              }
              sceneUniqeId_ = input.readMessage(com.hutong.socketbase.message.GSMessage.SceneUniqeId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sceneUniqeId_);
                sceneUniqeId_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPong_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPong_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.SGPong.class, com.hutong.socketbase.message.GSMessage.SGPong.Builder.class);
    }

    public static com.google.protobuf.Parser<SGPong> PARSER =
        new com.google.protobuf.AbstractParser<SGPong>() {
      public SGPong parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SGPong(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SGPong> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pongNum = 1;
    public static final int PONGNUM_FIELD_NUMBER = 1;
    private int pongNum_;
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    public boolean hasPongNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    public int getPongNum() {
      return pongNum_;
    }

    // required .GSMessage.SceneUniqeId sceneUniqeId = 2;
    public static final int SCENEUNIQEID_FIELD_NUMBER = 2;
    private com.hutong.socketbase.message.GSMessage.SceneUniqeId sceneUniqeId_;
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public boolean hasSceneUniqeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId() {
      return sceneUniqeId_;
    }
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder() {
      return sceneUniqeId_;
    }

    private void initFields() {
      pongNum_ = 0;
      sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPongNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSceneUniqeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSceneUniqeId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pongNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, sceneUniqeId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pongNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sceneUniqeId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPong parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.SGPong prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.SGPong}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.SGPongOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPong_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPong_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.SGPong.class, com.hutong.socketbase.message.GSMessage.SGPong.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.SGPong.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSceneUniqeIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pongNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPong_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.SGPong getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.SGPong.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.SGPong build() {
        com.hutong.socketbase.message.GSMessage.SGPong result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.SGPong buildPartial() {
        com.hutong.socketbase.message.GSMessage.SGPong result = new com.hutong.socketbase.message.GSMessage.SGPong(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pongNum_ = pongNum_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (sceneUniqeIdBuilder_ == null) {
          result.sceneUniqeId_ = sceneUniqeId_;
        } else {
          result.sceneUniqeId_ = sceneUniqeIdBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.SGPong) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.SGPong)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.SGPong other) {
        if (other == com.hutong.socketbase.message.GSMessage.SGPong.getDefaultInstance()) return this;
        if (other.hasPongNum()) {
          setPongNum(other.getPongNum());
        }
        if (other.hasSceneUniqeId()) {
          mergeSceneUniqeId(other.getSceneUniqeId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPongNum()) {
          
          return false;
        }
        if (!hasSceneUniqeId()) {
          
          return false;
        }
        if (!getSceneUniqeId().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.SGPong parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.SGPong) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pongNum = 1;
      private int pongNum_ ;
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public boolean hasPongNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public int getPongNum() {
        return pongNum_;
      }
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public Builder setPongNum(int value) {
        bitField0_ |= 0x00000001;
        pongNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public Builder clearPongNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pongNum_ = 0;
        onChanged();
        return this;
      }

      // required .GSMessage.SceneUniqeId sceneUniqeId = 2;
      private com.hutong.socketbase.message.GSMessage.SceneUniqeId sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> sceneUniqeIdBuilder_;
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public boolean hasSceneUniqeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId() {
        if (sceneUniqeIdBuilder_ == null) {
          return sceneUniqeId_;
        } else {
          return sceneUniqeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sceneUniqeId_ = value;
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(
          com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder builderForValue) {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = builderForValue.build();
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder mergeSceneUniqeId(com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              sceneUniqeId_ != com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance()) {
            sceneUniqeId_ =
              com.hutong.socketbase.message.GSMessage.SceneUniqeId.newBuilder(sceneUniqeId_).mergeFrom(value).buildPartial();
          } else {
            sceneUniqeId_ = value;
          }
          onChanged();
        } else {
          sceneUniqeIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder clearSceneUniqeId() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
          onChanged();
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder getSceneUniqeIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSceneUniqeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder() {
        if (sceneUniqeIdBuilder_ != null) {
          return sceneUniqeIdBuilder_.getMessageOrBuilder();
        } else {
          return sceneUniqeId_;
        }
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> 
          getSceneUniqeIdFieldBuilder() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder>(
                  sceneUniqeId_,
                  getParentForChildren(),
                  isClean());
          sceneUniqeId_ = null;
        }
        return sceneUniqeIdBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.SGPong)
    }

    static {
      defaultInstance = new SGPong(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.SGPong)
  }

  public interface SGPingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pingNum = 1;
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    boolean hasPingNum();
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    int getPingNum();

    // required .GSMessage.SceneUniqeId sceneUniqeId = 2;
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    boolean hasSceneUniqeId();
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId();
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder();
  }
  /**
   * Protobuf type {@code GSMessage.SGPing}
   */
  public static final class SGPing extends
      com.google.protobuf.GeneratedMessage
      implements SGPingOrBuilder {
    // Use SGPing.newBuilder() to construct.
    private SGPing(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SGPing(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SGPing defaultInstance;
    public static SGPing getDefaultInstance() {
      return defaultInstance;
    }

    public SGPing getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SGPing(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pingNum_ = input.readInt32();
              break;
            }
            case 18: {
              com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = sceneUniqeId_.toBuilder();
              }
              sceneUniqeId_ = input.readMessage(com.hutong.socketbase.message.GSMessage.SceneUniqeId.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sceneUniqeId_);
                sceneUniqeId_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPing_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.SGPing.class, com.hutong.socketbase.message.GSMessage.SGPing.Builder.class);
    }

    public static com.google.protobuf.Parser<SGPing> PARSER =
        new com.google.protobuf.AbstractParser<SGPing>() {
      public SGPing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SGPing(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SGPing> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pingNum = 1;
    public static final int PINGNUM_FIELD_NUMBER = 1;
    private int pingNum_;
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    public boolean hasPingNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pingNum = 1;</code>
     */
    public int getPingNum() {
      return pingNum_;
    }

    // required .GSMessage.SceneUniqeId sceneUniqeId = 2;
    public static final int SCENEUNIQEID_FIELD_NUMBER = 2;
    private com.hutong.socketbase.message.GSMessage.SceneUniqeId sceneUniqeId_;
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public boolean hasSceneUniqeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId() {
      return sceneUniqeId_;
    }
    /**
     * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
     *
     * <pre>
     * scene的唯一标识
     * </pre>
     */
    public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder() {
      return sceneUniqeId_;
    }

    private void initFields() {
      pingNum_ = 0;
      sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPingNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSceneUniqeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSceneUniqeId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pingNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, sceneUniqeId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pingNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sceneUniqeId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.SGPing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.SGPing prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.SGPing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.SGPingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPing_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.SGPing.class, com.hutong.socketbase.message.GSMessage.SGPing.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.SGPing.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSceneUniqeIdFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pingNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_SGPing_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.SGPing getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.SGPing.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.SGPing build() {
        com.hutong.socketbase.message.GSMessage.SGPing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.SGPing buildPartial() {
        com.hutong.socketbase.message.GSMessage.SGPing result = new com.hutong.socketbase.message.GSMessage.SGPing(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pingNum_ = pingNum_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (sceneUniqeIdBuilder_ == null) {
          result.sceneUniqeId_ = sceneUniqeId_;
        } else {
          result.sceneUniqeId_ = sceneUniqeIdBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.SGPing) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.SGPing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.SGPing other) {
        if (other == com.hutong.socketbase.message.GSMessage.SGPing.getDefaultInstance()) return this;
        if (other.hasPingNum()) {
          setPingNum(other.getPingNum());
        }
        if (other.hasSceneUniqeId()) {
          mergeSceneUniqeId(other.getSceneUniqeId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPingNum()) {
          
          return false;
        }
        if (!hasSceneUniqeId()) {
          
          return false;
        }
        if (!getSceneUniqeId().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.SGPing parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.SGPing) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pingNum = 1;
      private int pingNum_ ;
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public boolean hasPingNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public int getPingNum() {
        return pingNum_;
      }
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public Builder setPingNum(int value) {
        bitField0_ |= 0x00000001;
        pingNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pingNum = 1;</code>
       */
      public Builder clearPingNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pingNum_ = 0;
        onChanged();
        return this;
      }

      // required .GSMessage.SceneUniqeId sceneUniqeId = 2;
      private com.hutong.socketbase.message.GSMessage.SceneUniqeId sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> sceneUniqeIdBuilder_;
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public boolean hasSceneUniqeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId getSceneUniqeId() {
        if (sceneUniqeIdBuilder_ == null) {
          return sceneUniqeId_;
        } else {
          return sceneUniqeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sceneUniqeId_ = value;
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder setSceneUniqeId(
          com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder builderForValue) {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = builderForValue.build();
          onChanged();
        } else {
          sceneUniqeIdBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder mergeSceneUniqeId(com.hutong.socketbase.message.GSMessage.SceneUniqeId value) {
        if (sceneUniqeIdBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              sceneUniqeId_ != com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance()) {
            sceneUniqeId_ =
              com.hutong.socketbase.message.GSMessage.SceneUniqeId.newBuilder(sceneUniqeId_).mergeFrom(value).buildPartial();
          } else {
            sceneUniqeId_ = value;
          }
          onChanged();
        } else {
          sceneUniqeIdBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public Builder clearSceneUniqeId() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeId_ = com.hutong.socketbase.message.GSMessage.SceneUniqeId.getDefaultInstance();
          onChanged();
        } else {
          sceneUniqeIdBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder getSceneUniqeIdBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSceneUniqeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      public com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder getSceneUniqeIdOrBuilder() {
        if (sceneUniqeIdBuilder_ != null) {
          return sceneUniqeIdBuilder_.getMessageOrBuilder();
        } else {
          return sceneUniqeId_;
        }
      }
      /**
       * <code>required .GSMessage.SceneUniqeId sceneUniqeId = 2;</code>
       *
       * <pre>
       * scene的唯一标识
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder> 
          getSceneUniqeIdFieldBuilder() {
        if (sceneUniqeIdBuilder_ == null) {
          sceneUniqeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hutong.socketbase.message.GSMessage.SceneUniqeId, com.hutong.socketbase.message.GSMessage.SceneUniqeId.Builder, com.hutong.socketbase.message.GSMessage.SceneUniqeIdOrBuilder>(
                  sceneUniqeId_,
                  getParentForChildren(),
                  isClean());
          sceneUniqeId_ = null;
        }
        return sceneUniqeIdBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.SGPing)
    }

    static {
      defaultInstance = new SGPing(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.SGPing)
  }

  public interface GSPongOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pongNum = 1;
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    boolean hasPongNum();
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    int getPongNum();

    // required string gatewayId = 2;
    /**
     * <code>required string gatewayId = 2;</code>
     */
    boolean hasGatewayId();
    /**
     * <code>required string gatewayId = 2;</code>
     */
    java.lang.String getGatewayId();
    /**
     * <code>required string gatewayId = 2;</code>
     */
    com.google.protobuf.ByteString
        getGatewayIdBytes();
  }
  /**
   * Protobuf type {@code GSMessage.GSPong}
   */
  public static final class GSPong extends
      com.google.protobuf.GeneratedMessage
      implements GSPongOrBuilder {
    // Use GSPong.newBuilder() to construct.
    private GSPong(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GSPong(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GSPong defaultInstance;
    public static GSPong getDefaultInstance() {
      return defaultInstance;
    }

    public GSPong getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GSPong(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pongNum_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              gatewayId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPong_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPong_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hutong.socketbase.message.GSMessage.GSPong.class, com.hutong.socketbase.message.GSMessage.GSPong.Builder.class);
    }

    public static com.google.protobuf.Parser<GSPong> PARSER =
        new com.google.protobuf.AbstractParser<GSPong>() {
      public GSPong parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GSPong(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GSPong> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pongNum = 1;
    public static final int PONGNUM_FIELD_NUMBER = 1;
    private int pongNum_;
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    public boolean hasPongNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pongNum = 1;</code>
     */
    public int getPongNum() {
      return pongNum_;
    }

    // required string gatewayId = 2;
    public static final int GATEWAYID_FIELD_NUMBER = 2;
    private java.lang.Object gatewayId_;
    /**
     * <code>required string gatewayId = 2;</code>
     */
    public boolean hasGatewayId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string gatewayId = 2;</code>
     */
    public java.lang.String getGatewayId() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gatewayId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string gatewayId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getGatewayIdBytes() {
      java.lang.Object ref = gatewayId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gatewayId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      pongNum_ = 0;
      gatewayId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPongNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGatewayId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pongNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getGatewayIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pongNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getGatewayIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.hutong.socketbase.message.GSMessage.GSPong parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hutong.socketbase.message.GSMessage.GSPong prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GSMessage.GSPong}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hutong.socketbase.message.GSMessage.GSPongOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPong_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPong_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hutong.socketbase.message.GSMessage.GSPong.class, com.hutong.socketbase.message.GSMessage.GSPong.Builder.class);
      }

      // Construct using com.hutong.socketbase.message.GSMessage.GSPong.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pongNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gatewayId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hutong.socketbase.message.GSMessage.internal_static_GSMessage_GSPong_descriptor;
      }

      public com.hutong.socketbase.message.GSMessage.GSPong getDefaultInstanceForType() {
        return com.hutong.socketbase.message.GSMessage.GSPong.getDefaultInstance();
      }

      public com.hutong.socketbase.message.GSMessage.GSPong build() {
        com.hutong.socketbase.message.GSMessage.GSPong result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hutong.socketbase.message.GSMessage.GSPong buildPartial() {
        com.hutong.socketbase.message.GSMessage.GSPong result = new com.hutong.socketbase.message.GSMessage.GSPong(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pongNum_ = pongNum_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gatewayId_ = gatewayId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hutong.socketbase.message.GSMessage.GSPong) {
          return mergeFrom((com.hutong.socketbase.message.GSMessage.GSPong)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hutong.socketbase.message.GSMessage.GSPong other) {
        if (other == com.hutong.socketbase.message.GSMessage.GSPong.getDefaultInstance()) return this;
        if (other.hasPongNum()) {
          setPongNum(other.getPongNum());
        }
        if (other.hasGatewayId()) {
          bitField0_ |= 0x00000002;
          gatewayId_ = other.gatewayId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPongNum()) {
          
          return false;
        }
        if (!hasGatewayId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hutong.socketbase.message.GSMessage.GSPong parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hutong.socketbase.message.GSMessage.GSPong) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pongNum = 1;
      private int pongNum_ ;
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public boolean hasPongNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public int getPongNum() {
        return pongNum_;
      }
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public Builder setPongNum(int value) {
        bitField0_ |= 0x00000001;
        pongNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pongNum = 1;</code>
       */
      public Builder clearPongNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pongNum_ = 0;
        onChanged();
        return this;
      }

      // required string gatewayId = 2;
      private java.lang.Object gatewayId_ = "";
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public boolean hasGatewayId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public java.lang.String getGatewayId() {
        java.lang.Object ref = gatewayId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gatewayId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getGatewayIdBytes() {
        java.lang.Object ref = gatewayId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gatewayId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public Builder setGatewayId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        gatewayId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public Builder clearGatewayId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gatewayId_ = getDefaultInstance().getGatewayId();
        onChanged();
        return this;
      }
      /**
       * <code>required string gatewayId = 2;</code>
       */
      public Builder setGatewayIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        gatewayId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GSMessage.GSPong)
    }

    static {
      defaultInstance = new GSPong(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GSMessage.GSPong)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_SceneUniqeId_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_SceneUniqeId_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_GSRegist_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_GSRegist_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_SGRegist_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_SGRegist_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_GSPlayerDisconnect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_GSPlayerDisconnect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_SGPlayerDisconnect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_SGPlayerDisconnect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_GatewayDisconnect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_GatewayDisconnect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_SGDisconnectPlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_SGDisconnectPlayer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_SGSceneToSceneMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_SGSceneToSceneMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_GSPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_GSPing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_SGPong_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_SGPong_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_SGPing_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_SGPing_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GSMessage_GSPong_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GSMessage_GSPong_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017GSMessage.proto\022\tGSMessage\"2\n\014SceneUni" +
      "qeId\022\021\n\tsceneType\030\001 \002(\005\022\017\n\007sceneId\030\002 \002(\t" +
      "\"\035\n\010GSRegist\022\021\n\tgatewayId\030\001 \002(\t\"I\n\010SGReg" +
      "ist\022\016\n\006result\030\001 \002(\005\022-\n\014sceneUniqeId\030\002 \003(" +
      "\0132\027.GSMessage.SceneUniqeId\"K\n\022GSPlayerDi" +
      "sconnect\022\020\n\010playerId\030\001 \002(\003\022\020\n\010serverId\030\002" +
      " \002(\005\022\021\n\tgatewayId\030\003 \002(\t\"w\n\022SGPlayerDisco" +
      "nnect\022\016\n\006result\030\001 \002(\005\022\020\n\010playerId\030\002 \002(\003\022" +
      "\020\n\010serverId\030\003 \002(\005\022-\n\014sceneUniqeId\030\004 \002(\0132" +
      "\027.GSMessage.SceneUniqeId\"&\n\021GatewayDisco",
      "nnect\022\021\n\tgatewayId\030\001 \002(\t\"8\n\022SGDisconnect" +
      "Player\022\020\n\010playerId\030\001 \002(\003\022\020\n\010serverId\030\002 \002" +
      "(\005\"]\n\021SGSceneToSceneMsg\022\022\n\ntoPlayerId\030\001 " +
      "\002(\003\022\022\n\ntoServerId\030\002 \002(\005\022\016\n\006opCode\030\003 \002(\005\022" +
      "\020\n\010msgBytes\030\004 \002(\014\",\n\006GSPing\022\017\n\007pingNum\030\001" +
      " \002(\005\022\021\n\tgatewayId\030\002 \002(\t\"H\n\006SGPong\022\017\n\007pon" +
      "gNum\030\001 \002(\005\022-\n\014sceneUniqeId\030\002 \002(\0132\027.GSMes" +
      "sage.SceneUniqeId\"H\n\006SGPing\022\017\n\007pingNum\030\001" +
      " \002(\005\022-\n\014sceneUniqeId\030\002 \002(\0132\027.GSMessage.S" +
      "ceneUniqeId\",\n\006GSPong\022\017\n\007pongNum\030\001 \002(\005\022\021",
      "\n\tgatewayId\030\002 \002(\tB*\n\035com.hutong.socketba" +
      "se.messageB\tGSMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_GSMessage_SceneUniqeId_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_GSMessage_SceneUniqeId_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_SceneUniqeId_descriptor,
              new java.lang.String[] { "SceneType", "SceneId", });
          internal_static_GSMessage_GSRegist_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_GSMessage_GSRegist_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_GSRegist_descriptor,
              new java.lang.String[] { "GatewayId", });
          internal_static_GSMessage_SGRegist_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_GSMessage_SGRegist_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_SGRegist_descriptor,
              new java.lang.String[] { "Result", "SceneUniqeId", });
          internal_static_GSMessage_GSPlayerDisconnect_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_GSMessage_GSPlayerDisconnect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_GSPlayerDisconnect_descriptor,
              new java.lang.String[] { "PlayerId", "ServerId", "GatewayId", });
          internal_static_GSMessage_SGPlayerDisconnect_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_GSMessage_SGPlayerDisconnect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_SGPlayerDisconnect_descriptor,
              new java.lang.String[] { "Result", "PlayerId", "ServerId", "SceneUniqeId", });
          internal_static_GSMessage_GatewayDisconnect_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_GSMessage_GatewayDisconnect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_GatewayDisconnect_descriptor,
              new java.lang.String[] { "GatewayId", });
          internal_static_GSMessage_SGDisconnectPlayer_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_GSMessage_SGDisconnectPlayer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_SGDisconnectPlayer_descriptor,
              new java.lang.String[] { "PlayerId", "ServerId", });
          internal_static_GSMessage_SGSceneToSceneMsg_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_GSMessage_SGSceneToSceneMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_SGSceneToSceneMsg_descriptor,
              new java.lang.String[] { "ToPlayerId", "ToServerId", "OpCode", "MsgBytes", });
          internal_static_GSMessage_GSPing_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_GSMessage_GSPing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_GSPing_descriptor,
              new java.lang.String[] { "PingNum", "GatewayId", });
          internal_static_GSMessage_SGPong_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_GSMessage_SGPong_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_SGPong_descriptor,
              new java.lang.String[] { "PongNum", "SceneUniqeId", });
          internal_static_GSMessage_SGPing_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_GSMessage_SGPing_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_SGPing_descriptor,
              new java.lang.String[] { "PingNum", "SceneUniqeId", });
          internal_static_GSMessage_GSPong_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_GSMessage_GSPong_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GSMessage_GSPong_descriptor,
              new java.lang.String[] { "PongNum", "GatewayId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
